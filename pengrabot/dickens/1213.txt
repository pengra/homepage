Q&A for work. A dedicated place to share your team’s knowledge. This question already has an answer here: I have been running through some C# exercises in a book, and I ran across and example that stumped me. Straight from the book, the output line shows as: I have been scouring the VB 2015 help and Google, regarding string formatting and Console.WriteLine overload methods. I am not seeing anything that explains why it is what it is. Any advice would be appreciated. Create 2 instances: Now, you want to output it to the screen. The 2 ways that you usually use: This creates a new problem: For those reasons, we should use new feature: The compiler now maintains the placeholders for you so you don’t have to worry about indexing the right argument because you simply place it right there in the string. is a concept that languages like Perl have had for quite a while, and   now we’ll get this ability in C# as well. In String Interpolation, we   simply prefix the string with a $ (much like we use the @ for verbatim   strings).  Then, we simply surround the expressions we want to   interpolate with curly braces (i.e. { and }): It looks a lot like the String.Format() placeholders, but instead of an index, it is the expression itself inside the curly braces.  In fact, it shouldn’t be a surprise that it looks like String.Format() because that’s really all it is – syntactical sugar that the compiler treats like String.Format() behind the scenes. A great part is, the compiler now maintains the placeholders for you so you don’t have to worry about indexing the right argument because you simply place it right there in the string. asked viewed active 1 year, 8 months ago