Table of Contents Thus far, in our series of posts on Python development environments we‚Äôve looked at Sublime Text and VIM: Another topic that does not need to be covered again is the basics of using Emacs. The easiest way to learn Emacs is to follow the built-in tutorial. The topics covered in this post do not require that you know how to use Emacs yet; instead, each topic highlights what you can do after learning the basics. To begin, the following configuration snippet provides package installation and installs a theme package: The following image shows some other basic features that come with Emacs out of the box - including simple file searching and split layouts: With this basic configuration complete we can begin to dive into configuring the environment for Python development! The following will install the elpy package: Now just enable it: With the new configuration, we can restart Emacs and open up a Python file to see the new mode in action: Shown in this image are the following features: With that, all of the basics of a Python IDE in Emacs have been covered. Now let‚Äôs put some icing on this cake! and Now we get realtime feedback when editing Python code: and Now (after forcing some pep8 errors) when we save our demo Python file, the errors will automatically be corrected: The standard Jupyter web interface for notebooks is nice but requires us to leave Emacs to use: However, we can complete the exact same task by connecting to and interacting with the notebook server directly in Emacs. Now that all of the basic Python IDE features (and some really awesome extras) have been covered, there are a few other things that an IDE should be able to handle. First up is git integration‚Ä¶ In addition to lots of other Emacs configuration goodies. As you can see, Emacs is clearly the best editor‚Ä¶ To be fair, there are a lot of great options out there for Python IDEs, but I would absolutely recommend learning either Vim or Emacs as they are by far the most versatile development environments possible. I said I‚Äôd leave you with the complete Emacs configuration, so here it is: Hopefully this configuration will spark your Emacs journey! üêç Python Tricks üíå Kyle is a software engineer in Boulder, CO. He is a Python first developer with experience in Ruby, Golang, and many more languages. What Do You Think? Keep Learning ‚Äî FREE Email Series ‚Äî üêç Python Tricks üíå üîí No spam. Unsubscribe any time. All Tutorial Topics Table of Contents Almost there! Complete this form and click the button below to gain instant access: Python + Emacs Setup Guide (PDF)