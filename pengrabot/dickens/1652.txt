Q&A for work. A dedicated place to share your teamâ€™s knowledge. I am so close to getting this, but it just isn't right.  All I would like to do is remove the character "r" from a string.  The problem is, there is more than one instance of "r" in the string. However, it is always the character at index 4 (so the 5th character). example string: "crt/r2002_2" What I want: "crt/2002_2" This replace function removes both "r" Produces: "ct/2002_2" I tried this function: It only works if I replace it with another character. It will not simply remove it. Any thoughts? A simple functional javascript way would be mystring = mystring.split('/r').join('/') simple, fast, it replace globally and no need for functions or prototypes There's always the string functions, if you know you're always going to remove the fourth character: Your first func is almost right. Just remove the 'g' flag which stands for 'global' (edit) and give it some context to spot the second 'r'. Edit: didn't see it was the second 'r' before so added the '/'. Needs \/ to escape the '/' when using a regEx arg. Thanks for the upvotes but I was wrong so I'll fix and add more detail for people interested in understanding the basics of regEx better but this would work: Now for the excessive explanation: When reading/writing a regEx pattern think in terms of: <a character or set of charcters> followed by <a character or set of charcters> followed by <... In regEx <a character or set of charcters> could be one at a time: So read as e, followed by a, followed by c, etc... Or a single <a character or set of charcters> could be characters described by a character class: Or expanded on to match a quantity of characters (but still best to think of as a single element in terms of the sequential pattern): So smoosh a bunch together: And of course I've over-elaborated but my  point was simply that this: is a series of 3 pattern elements (a thing followed by a thing followed by a thing). And so is this: As wacky as regEx starts to look, it all breaks down to series of things (potentially multi-character things) following each other sequentially. Kind of a basic point but one that took me a while to get past so I've gone overboard explaining it here as I think it's one that would help the OP and others new to regEx understand what's going on. The key to reading/writing regEx is breaking it down into those pieces. For global replacement of '/r', this code worked for me. If it is always the 4th char in yourString you can try: It only works if I replace it with another character. It will not simply remove it. The shortest way would be to use splice To replace give character like below and to remove character at index give second parameter as empty string a.replaceAt(4,''); In Javascript, there is no remove function for string, but there is substr function. You can use the substr function once or twice to remove characters from string. You can make the following function to remove characters at start index to the end of string, just like the c# method first overload String.Remove(int startIndex): and/or you also can make the following function to remove characters at start index and count, just like the c# method second overload String.Remove(int startIndex, int count): and then you can use these two functions or one of them for your needs! Example: Output: crt/2002_2 In C# (Sharp), you can make an empty character as '\0'. Maybe you can do this: Search on google or surf on the interent and check if javascript allows you to make empty characters, like C# does. If yes, then learn how to do it, and maybe the replaceAt function will work at last, and you'll achieve what you want! Finally that 'r' character will be removed! The following function worked best for my case: Explanation: If you just want to remove single character and If you know index of a character you want to remove, you can use following function: Thanks for contributing an answer to Stack Overflow! Required, but never shown Required, but never shown asked viewed active today