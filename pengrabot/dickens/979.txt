ðŸ’– Support our work and buy a Django Girls t-shirt! âœ¨ When you&aposre building a website, you always need a similar set of components: a way to handle user authentication (signing up, signing in, signing out), a management panel for your website, forms, a way to upload files, etc. Luckily for you, other people long ago noticed that web developers face similar problems when building a new site, so they teamed up and created frameworks (Django being one of them) that give you ready-made components to use. Frameworks exist to save you from having to reinvent the wheel and to help alleviate some of the overhead when youâ€™re building a new site. To understand what Django is actually for, we need to take a closer look at the servers. The first thing is that the server needs to know that you want it to serve you a web page. Imagine a mailbox (port) which is monitored for incoming letters (requests). This is done by a web server. The web server reads the letter and then sends a response with a webpage. But when you want to send something, you need to have some content. And Django is something that helps you create the content. Imagine a mail carrier with a letter. She is walking down the street and checks each house number against the one on the letter. If it matches, she puts the letter there. This is how the urlresolver works! The description above is a little bit simplified, but you don&apost need to know all the technical things yet. Having a general idea is enough. So instead of diving too much into details, we will start creating something with Django and we will learn all the important parts along the way!