Q&A for work. A dedicated place to share your teamâ€™s knowledge. Is there an easy way to take a string of html in JavaScript and strip out the html? Simplest way: That retrieves all the text from a string of html. here the code to test the inline javascript: Also, it does not request resources on parse (like images) As an extension to the jQuery method, if your string might not contian HTML (eg if you are trying to remove HTML from a form field) will return an empty string if there is no html Use: instead. The above function posted by hypoxide works fine, but I was after something that would basically convert HTML created in a Web RichText editor (for example FCKEditor) and clear out all HTML but leave all the Links due the fact that I wanted both the HTML and the plain text version to aid creating the correct parts to an STMP email (both HTML and plain text). After a long time of searching Google myself and my collegues came up with this using the regex engine in Javascript: and then after the code has run it looks like this:- Hope you find this useful. An improvement to the accepted answer. This way something running like this will do no harm: Firefox, Chromium and Explorer 9+ are safe. Opera Presto is still vulnerable. Also images mentioned in the strings are not downloaded in Chromium and Firefox saving http requests. In the simple example, becomes This is my title This string has html code i want to remove Now back to "normal text" and stuff using The JavaScript function and test page look this: It was used with this HTML: This is a regex version, which is more resilient to malformed HTML, like: Unclosed tags Some text <img "<", ">" inside tag attributes Some text <img alt="x > y"> Newlines Some <a href="http://google.com"> The code Another, admittedly less elegant solution than nickf's or Shog9's, would be to recursively walk the DOM starting at the <body> tag and append each text node. The usage is very simple. For example in node.js: Or in the browser with pure js: It also works with require.js: After trying all of the answers mentioned most if not all of them had edge cases and couldn't completely support my needs. usage: demo: https://jsfiddle.net/gaby_de_wilde/pqayphzd/ demo of top answer doing the terrible things: https://jsfiddle.net/gaby_de_wilde/6f0jymL6/1/ A lot of people have answered this already, but I thought it might be useful to share the function I wrote that strips HTML tags from a string but allows you to include an array of tags that you do not want stripped. It's pretty short and has been working nicely for me. I think the easiest way is to just use Regular Expressions as someone mentioned above. Although there's no reason to use a bunch of them. Try: I made some modifications to original Jibberboy2000 script Hope it'll be usefull for someone Here's a version which sorta addresses @MikeSamuel's security concern: Note, it will return an empty string if the HTML markup isn't valid XML (aka, tags must be closed and attributes must be quoted). This isn't ideal, but does avoid the issue of having the security exploit potential. If not having valid XML markup is a requirement for you, you could try using: but that isn't a perfect solution either for other reasons. With jQuery you can simply retrieving it by using Below code allows you to retain some html tags  while stripping all others This works in both node and the browser if you pack you web application using a tool like webpack. This seems to work great. The downside of this approach is that it only works in browsers. Here's what I came up with (Not battle-tested): I have created a working regular expression myself: simple 2 line jquery to strip the html. Using Jquery: The text state represents a one line plain text edit control for the element's value. Define this as a jquery plugin and use it like as follows: For escape characters also this will work using pattern matching: asked viewed active 7 days ago