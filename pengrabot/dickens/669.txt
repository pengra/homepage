A finite state machine is a form of abstraction (WHY/HOW?). It models the behaviour of a system by showing each state it can be in and the transitions between each state. Consider an elevatorÂ : Possible states of the system: 'static on floor 1', 'moving up', 'static on floor 2', 'moving down' The transitions and their inputs: Form the above we can draw the finite state machine for the elevator. [picture of completed finite state machine to be inserted here] We can also produce a state transition table (DEFINE THIS LANGUAGE BOX?): Applications of finite state machines are found in many sciences. Mainly engineering, biology and most commonly in linguistics, where they are used to describe languages. Looking at the above diagram we can see that it starts in state S1, an input of 1 will keep it in state S1, and an input of 0 will move it to state S2. Once in S2 an input of 1 will keep it there, and an input of 0 will switch it back to S1.  This means that the following inputs are valid: It might appear to accept any binary value, but this isn't true.  The only state it can accept in is state S1.  This places the following rule on all accepted inputs: "A combination of binary digits involving an even number of zeros".  This is useful for parity checks.  If I try the following: I am stuck in state S2 and the FSM has not accepted.  Can you create a FSM to only accept Binary numbers with odd numbers of 1s? For the FSM above which of these inputs are valid: For the FSM above which of these inputs are valid: Draw a finite state automata that will accept the word Banana whilst using only 3 states Draw a single finite state automata that will accept all the words: It outputs For the Mealy machine above, what do the following inputs output: What does this machine do, what do the outputs tell you? This machine could be used to track the money going into a vending machine, letting you know how much you have left to pay on a 50p chocolate bar What is the difference between a mealy machine and a finite state automaton? Create a state transition table for the following FSM: Create a state transition table for the following FSM: Draw the FSM for the following state transition table: You might have already cottoned on.  This represents a traffic light system Draw the FSM for the following state transition table: