The web framework for perfectionists with deadlines. To create a new instance of a model, just instantiate it like any other Python class: Note Add a classmethod on the model class: Add a method on a custom manager (usually preferred): There are three steps involved in validating a model: This method should be used to provide custom model validation, and to modify attributes on your model if desired. For instance, you could use it to automatically provide a value for a field, or to do validation that requires access to more than a single field: The model save process also has some subtleties; see the sections below. If you assign auto-primary-key values manually, make sure not to use an already-existing primary-key value! If you create a new object with an explicit primary-key value that already exists in the database, Django will assume you’re changing the existing record rather than creating a new one. Explicitly specifying auto-primary-key values is mostly useful for bulk-saving objects, when you’re confident you won’t have primary-key collision. When you save an object, Django performs the following steps: It should be very rare that you’ll need to use these parameters. Django will almost always do the right thing and trying to override that will lead to errors that are difficult to track down. This feature is for advanced use only. Sometimes you’ll need to perform a simple arithmetic task on a field, such as incrementing or decrementing the current value. The obvious way to achieve this is to do something like: A few object methods have special purposes. Note For example: For example: The equality method is defined such that instances with the same primary key value and the same concrete class are considered equal. For proxy models, concrete class is defined as the model’s first non-proxy parent; for all other models it is simply the model’s class. For example: In previous versions only instances of the exact same class and same primary key value were considered equal. In previous versions instance’s without primary key value were hashable. For example: For example: Warning You should avoid building the URL from unvalidated user input, in order to reduce possibilities of link or redirect poisoning: This template code is much better: Note Warning This decorator takes the name of a URL pattern (either a view name or a URL pattern name) and a list of position or keyword arguments and uses the URLconf patterns to construct the correct, full URL. It returns a string for the correct URL, with all parameters substituted in the correct positions. Similarly, if you had a URLconf entry that looked like: Notice that we specify an empty sequence for the second parameter in this case, because we only want to pass keyword parameters, not positional ones. ...and then using that name to perform the reverse URL resolution instead of the view name: For example: Note that in the case of identical date values, these methods will use the primary key as a tie-breaker. This guarantees that no records are skipped or duplicated. That also means you cannot use those methods on unsaved objects.