"I don't doubt for a minute this is serious." Jake Williams, Rendition Infosec The trick's name is based on a loophole the hackers found in the so-called copy-on-write, or CoW, protection built into how MacOS manages a computer's memory. Some programs, when dealing with large quantities of data, use an efficiency trick that leaves data on a computer's hard drive rather than potentially clog up resources by pulling it into memory. That data, like any data in a computer's memory, can sometimes be used by multiple processes at once. The MacOS memory manager keeps a map of its physical location to help coordinate, but if one of those processes tries to change the data, the memory manager's copy-on-write safeguard requires it to make its own copy. Which is to say, a program can't simply change the data shared by all the other processes—some of which could be more highly privileged, sensitive programs than the one requesting the change. Google's BuggyCow trick, however, takes advantage of the fact that when a program mounts a new file system on a hard drive—basically loading a whole collection of files rather than altering just one—the memory manager isn't warned. So a hacker can unmount a file system, remount it with new data, and in doing so silently replace the information that some sensitive, highly privileged code is using. Technically, as a zero-day vulnerability with no patch in sight, BuggyCow applies to anyone with an Apple laptop or desktop. But given the technical skill and access needed to pull it off, you shouldn't lose much sleep over it. To even start carrying out this Rube Goldberg–style attack, a hacker would need a victim to already have some form of malware running on their computer. And while BuggyCow would allow that malware to potentially mess with the inner workings of higher-privileged parts of the computer, it could do so only if it found a highly privileged program that kept its sensitive data on the hard drive rather than memory. In typically cryptic fashion, Google's Project Zero team didn't respond to WIRED's request for comment. But Williams speculates that the researchers likely already had in mind a target application that would allow malicious hackers to do something dangerous with their technique, although he didn't himself immediately know what it might be. "I don't doubt for a minute this is serious," Williams says. "I have very little question that there are things out there that are vulnerable to this." Thomas Reed, a Mac-focused researcher at security firm MalwareBytes, points out that BuggyCow might be able to rewrite not only data used by highly privileged programs, but code too. "If a program left something like loadable code libraries in some kind of disk-based storage, that would be a prime target," Reed says. "Malware could write code into that and then use that to get the code executed with higher privileges." In fact, Project Zero notes that it first warned Apple about its BuggyCow flaw back in November and that the company hadn't acted to patch it ahead of last week's public reveal. Apple didn't respond to a request for comment. "They've had a lot of very-high-profile security-related bugs and some have been really, really stupid," Reed says. "It makes you wonder what’s going on with the QA process at Apple. Are they adequately testing? Lately, it seems like they’re not." It’s time to start using an encrypted messaging app. Why? Using end-to-end encryption means that no one can see what you’re sharing back and forth. CNMN Collection © 2018 Condé Nast. All rights reserved.