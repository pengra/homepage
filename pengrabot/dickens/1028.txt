Operators are the constructs which can manipulate the value of operands. Consider the expression 4 + 5 = 9. Here, 4 and 5 are called operands and + is called operator. Python language supports the following types of operators. Let us have a look on all operators one by one. Assume variable a holds 10 and variable b holds 20, then − These operators compare the values on either sides of them and decide the relation among them. They are also called Relational operators. Assume variable a holds 10 and variable b holds 20, then − Assume variable a holds 10 and variable b holds 20, then − Bitwise operator works on bits and performs bit by bit operation. Assume if a = 60; and b = 13; Now in binary format they will be as follows − a = 0011 1100 b = 0000 1101 ----------------- a&b = 0000 1100 a|b = 0011 1101 a^b = 0011 0001 ~a  = 1100 0011 There are following Bitwise operators supported by Python language There are following logical operators supported by Python language. Assume variable a holds 10 and variable b holds 20 then Python’s membership operators test for membership in a sequence, such as strings, lists, or tuples. There are two membership operators as explained below − Identity operators compare the memory locations of two objects. There are two Identity operators explained below − The following table lists all operators from highest precedence to lowest. ** Exponentiation (raise to the power) ~ + - Complement, unary plus and minus (method names for the last two are +@ and -@) * / % // Multiply, divide, modulo and floor division + - Addition and subtraction >> << Right and left bitwise shift & Bitwise 'AND' ^ | Bitwise exclusive `OR' and regular `OR' <= < > >= Comparison operators <> == != Equality operators = %= /= //= -= += *= **= Assignment operators is is not Identity operators in not in Membership operators not or and Logical operators © Copyright 2019. All Rights Reserved.