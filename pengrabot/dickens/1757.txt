Before I learned software development, API sounded like a kind of beer. Today I use the term so often that I have in fact recently tried to order an API at a bar. The bartender’s response was to throw a 404: resource not found. I meet lots of people, both working in tech and elsewhere, who have a rather vague or incorrect idea about what this fairly common term means. But how do you explain API in plain English? And is there a broader meaning than the one used in development and business? First, let’s pull back and look at how the web itself works. Every page on the internet is stored somewhere on a remote server. A remote server is not so mystical after all — it’s just a part of a remotely located computer that is optimized to process requests. Alternatively, your browser can often send an API request directly to Google’s server bypassing your server. How is this Google Calendar’s API different from the API of any other remote server out there? If your website’s server is making the API request, then your website’s server is the client (similar to your browser being the client when you use it to navigate to a website). Most modern websites consume at least some third-party APIs. Many problems already have a third-party solution, be it in the form of a library or service. It’s often just easier and more reliable to use an existing solution. Can you make these requests with your browser? Often, yes. Since the actual HTTP transmission happens in text, your browser will always do the best it can to display the response. The browser seems to have done just fine displaying a JSON response. A JSON response like this is ready for use in your code. It‘s easy to extract data from this text. Then you can do whatever you want with the data. To close off, let’s throw in a couple more examples of APIs. “Application” can refer to many things. Here are some of them in the context of API: Basically any piece of software that can be distinctively separated from its environment, can be an “A” in API, and will probably also have some sort of API. Let’s say you’re using a third-party library in your code. Once incorporated into your code, a library becomes part of your overall app. Being a distinct piece of software, the library would likely have an API which allows it to interact with the rest of your code. From what we have covered, I hope you take away the broader meaning of API as well as the more common uses of the term today. A great youtube video on DNS (Domain Name System) HTTP protocol basics An Awesome Khan Academy video on Object Oriented Design Principles Stories worth reading about programming and technology from our open source community.