Software Testing Material A site for software testers. We provide free online tutorials on Manual Testing, Automation Testing - Selenium, QTP, LoadRunner, Testing Tools and many more. Let’s see what we are going to learn in this Java Tutorial now Let’s see a brief introduction to Java. Java is a high-level programming language originally developed by Sun Microsystems in 1995. Java is a platform independent language. Yes, it runs on a multiple platforms such as UNIX, Windows, Mac OS. The Java language’s programming is based on the concept of OOP. We will see this in detail in later part of this Java Tutorial. We need to understand three terminologies for sure in Java such as JDK, JRE and JVM. Here I give basic idea about these terms in the next post we will see detailed explanation. What is JDK? What is JRE? What is JVM? JVM stands for Java Virtual Machine. JVM drives the java code. Using JVM, we can run java byte code by converting them into current OS machine language. Download and Install JAVA Go to the below mentioned link and download the latest version of JAVA Accept the license agreement and choose the right ‘JDK’ file to download based on your system requirement. Once downloaded. Go ahead and verify the Java version. To do this, open command prompt and type “java -version” and hit enter In Java, we use print to output required text directly to the console of IDE Syntax: Simple print statement: Simple print statement with new line: Check this link to read more on Print in Java Sometimes, we may face a situation where we need to get the input from the user in runtime. We use “Scanner” class to accept input from the user. Syntax: User Input in Java with sample programs In Java, we have two types of comments. We use comments to write some text within our code. Compiler will ignore these comments. Syntax: Note: Comments in between the code gives more readability Do you want to show auto generated code whenever you create a new class as shown below. Follow the below steps: I assume, you are using Eclipse IDE. Whenever you create a new class, you can see comments. Check this link to read more. To read a text file, we use FileReader and wrap it in a BufferedReader. In the below example, we read a file named “FileToRead.txt” which is located in my local system and output the file line by line in my eclipse console. Sample program on Read From File in Java To create a new file and write text on it. We can write to a file using Java in different ways but I show you how to write text to a file using BufferedWriter. Sample program on Write To File in Java In Java, variable is a name given to a memory location and this variable is associated with a value. int x = 99; variable x holds integer values and its current value is 99. Let’s see how to declare variables in Java Syntax to declare a variable in Java: data_type variable = value; Example: int x = 99; Earlier we have learnt that Java is a Case Sensitive Language. Even variables have their own naming convention to follow. 1. Variable name can starts with special characters such as _ or $ Example: int $myAge; 2. Variable name should begin with lower case leter Example: 3. If the variable name consists of more than one word, it’s a best practice to capitalize the first letter of each subsequent word. Example: 4. Variable name should not contain white spaces Example: There are three types of variables in Java. Read more on Variables in Java with Sample programs Data types in java specify the size and type of values that can be stored in an identifier. There are two types of Data Types in Java. Primitive Data Type: There are 8 primitive data types such as byte, short, int, long, float, double, char, and boolean. Size of these 8 primitive data types wont change from one OS to other. Non-primitive Data Type: Non-primitive data types include Classes, Interfaces and Arrays which we will learn in coming tutorials. Sample program on Data Types in Java Operators in Java are the special symbols that perform specific operations and then return a result. Types of Operators in Java are Sample programs on Operators in Java Following image shows you the subdivisions of Control Flow Statements in Java. Let’s see the following conditional statements Check this link to learn all the Conditional Statements with sample programs The if statement is the most basic of all the control flow statements. The if statement tells our program to execute a certain section of code only if a particular test evaluates to true. An if statement inside another the statement. If the outer if condition is true then the section of code under outer if condition would execute and it goes to the inner if condition. If inner if condition is true then the section of code under inner if condition would execute. If a condition is true then the section of code under if would execute else the section of code under else would execute. The switch statement in Java is a multi branch statement. We use this in Java when we have multiple options to select. It executes particular option based on the value of an expression. Switch works with the byte, short, char, and int primitive data types. It also works with enumerated types, the String class, and a few special classes that wrap certain primitive types such as Character, Byte, Short, and Integer. The for statement in Java allows us to repeatedly loops until a particular condition is satisfied. Syntax: Detailed explanation on For Loop with sample program Syntax: Enhanced For Loop with a sample program The while statement continually executes a block of statements while a particular condition is true. Syntax: If the expression of while statement evaluates to true, then it executes the statement(s) in the while block. The while statement continues testing the expression and executing its block until the expression evaluates to false. While Loop with Sample Program The do-while is similar to the while loop. In do-while loop, the condition is evaluated after the execution of statements with in the do block at least once. Do While Loop with Sample Program The Continue Statement in Java is used to continue loop. It is widely used inside loops. Whenever the continue statement is encountered inside a loop, control immediately jumps to the beginning of the loop for next iteration by skipping the execution of statements inside the body of loop for the current iteration. Syntax: continue; Continue Statement in Java with Sample Program The Break statement in Java is used to break a loop statement or switch statement. The Break statement breaks the current flow at a specified condition. Note: In case of inner loop, it breaks just the inner loop. Syntax: break; Break Statement with Sample Program Learn more on OOPs concept OOPS Stands for Object Oriented Programming System. In this tutorial, I will introduce you to Class, Object, Constructor, Abstraction, Encapsulation, Inheritance, Polymorphism, Interface etc., A class is a blueprint or prototype from which objects are created. A class contains variables (data types) and methods (functions) to describe the behavior of an object. Object is a software bundle of related state and behavior. Objects have two characteristics namely state and behavior. We can also say, Object is an entity that has state and behavior. Object is an instance of a class. Sample: Example: To understand what is a class and object in detail, let me give you a basic example related to a computer. Computer with Model and Price. Assume, you have two computers of Apple and Lenovo. Now say the model of Apple is MacBook Pro and the model of Lenovo is Yoga. The price of Apple is $299 and the price of Lenovo is $99. Computer is a class which has two attributes namely Model and Price. Apple and Lenovo are the objects of the class Computer. Let’s see how to create an object: Compter laptop = new Computer(); Computer is a class name followed by the name of the reference laptop. Then there is a “new” keyword which is used to allocate memory. Finally, there is a call to constructor “Computer()”. This call initializes the new object “new Computer()”. We create an Object by invoking the constructor of a class with the new keyword. I hope, now you got to know how to create an object Earlier we have seen Object is an entity which has both state and behavior. Here we are going to discuss about behavior of an Object. Method describes the behavior of an Object. A method consists of collection of statements which performs an action. Methods are also known as procedures or functions Let’s see an example of a method declaration. Every method declaration must have return type of the method, a pair of parenthesis, and a body between braces In general, method consists of 6 components. The signature of the above declared method is Int sum(int a, int b, int c) A method has a unique name within its class. However, a method might have the same name as other methods due to method overloading. Let’s see how to call methods using an object. Hope you have heard a phrase “Instantiating a class”. The phrase “Instantiating a class” means the same thing as “Creating an Object” which we did in the above program. Whenever you create an Object, it means you are creating an instance of a class, therefore “instantiating a class”. Methods are of two types In Java, there are two types of modifiers in Java Note: Class or Interface cannot be declared as private Note: Class cannot be declared as protected See this simple table to understand access modifiers easily Access Modifiers in Java with Sample Programs Constructor in Java is used in the creation of an Object that is an instance of a Class. Constructor name should be same as class name. It looks like a method but its not a method. It wont return any value. We have seen that methods may return a value. If there is no constructor in a class, then compiler automatically creates a default constructor. Inheritance is a process where one class inherits the properties of another class. Let’s say we have two classes namely Parent Class and Child Class. Child class is also known as Derived Class. As per the above definition, the Child class inherits the properties of the Parent Class. The main purpose of Inheritance is Code Reusability. Assume we have a Class named Laptop, Apple MacBook Pro, Lenovo Yoga. Apple MacBook Pro and Lenovo Yoga classes extend the Laptop Class to inherit the properties of the Laptop Class. Polymorphism allows us to perform a task in multiple ways. Let’s break the word Polymorphism and see it, ‘Poly’ means ‘Many’ and ‘Morphos’ means ‘Shapes’. Let’s see an example. Assume we have four students and we asked them to draw a shape. All the four may draw different shapes like Circle, Triangle, and Rectangle, . There are two types of Polymorphism in Java We can perform polymorphism by ‘Method Overloading’ and ‘Method Overriding’ A class having multiple methods with same name but different parameters is called Method Overloading There are three ways to overload a method. Earlier we have seen method signature. At compile time, Java knows which method to invoke by checking the method signatures. So this is called compile time polymorphism or static binding. Declaring a method in child class which is already present in the parent class is called Method Overriding. In simple words, overriding means to override the functionality of an existing method. Abstraction is the methodology of hiding the implementation of internal details and showing the functionality to the users. Example: Mobile Phone. A layman who is using mobile phone doesn’t know how it works internally but he can make phone calls. Abstraction in Java is achieved using abstract classes and interfaces. Let’s see what is Abstract Class and Interface in detail. We can easily identify whether a class is an abstract class or not. A class which contains abstract keyword in its declaration then it is an Abstract Class. Syntax: Points to remember: An abstract method is a method that is declared without an implementation (without braces, and followed by a semicolon), like this: In order to use an abstract method, you need to override that method in sub class. An interface in Java looks similar to a class but both the interface and class are two different concepts. An interface can have methods and variables just like the class but the methods declared in interface are by default abstract. We can achieve 100% abstraction and multiple inheritance in Java with Interface. Points to remember: Encapsulation is a mechanism of binding code and data together in a single unit. Let’s take an example of Capsule. Different powdered or liquid medicines are encapsulated inside a capsule. Likewise in encapsulation, all the methods and variables are wrapped together in a single class. Collection of similar type of elements is known as Array. Array in Java is an Object that holds fixed number of values of a similar data types which means an array of int will contain only integers, an array of string will contain only strings etc.. The length of an array is established when the array is created. After creation, its length is fixed. Array is a index based and its index starts from 0 which means the first element of an array is stored at 0 index. Array holds primitive types as well as object references. Syntax: or Check this link to read more on Arrays with examples Using ArrayList we can overcome the size issue. ArrayList is a resizable array. ArrayList Class implements List interface. ArrayList allows duplicate elements (remember that Set in Java wont allow duplicate values. We will see Set in later sections) Check this link to read more on Arrays with examples Check this link Collections Framework was introduced in Java 1.2 . The Java collections framework (JCF) is a set of classes and interfaces that implement commonly reusable collection data structures. Collection framework has many different interfaces and classes. Each and every interface and class has different purpose. We can perform add, edit, delete etc., operations on group of objects as per methods and implementation of a class. Check this link to read more on Collections Framework Java Map is a part of collections framework. The Map interface is based on key value pair. It maps unique keys to values. The Map interface is not a subtype of the Collection interface. The Map interface acts similar to Collections but a bit different from the rest of the collection types. It can’t contain duplicate keys however duplicate values are allowed. Check this link to read more on Map in Java Check this link to read more on LinkedList in Java The Java programming language uses exceptions to handle errors and other exceptional events. What is an Exception: An exception is an event that interrupts the normal flow of the program’s instructions. Exceptions occur during the execution of a program and terminates the program. As mentioned earlier, the Java language uses exceptions to handle errors and other exceptional events. The main purpose of exception handling is to continue the flow of the program. Types of Exceptions: There are two types of exceptions: You may like this: Rajkumar SM is a founder of SoftwareTestingMaterial. He is a certified Software Test Engineer by profession and blogger & youtuber by choice. He has an extensive experience in the field of Software Testing. He writes here about Software Testing which includes both Manual and Automation Testing. He loves to be with his wife and cute little kid 'Freedom'. June 26, 2018 at 3:27 pm PLZ MAKE VIDEOS ON JAVA FOR AUTOMATION TESTING. June 27, 2018 at 8:58 am Hi Rohit, we will try to do it.