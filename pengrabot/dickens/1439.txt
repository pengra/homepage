Vim, short for Vi IMproved, is a configurable text editor often used as a Python development environment. Vim proponents commonly cite the numerous plugins, Vimscript and logical command language as major Vim strengths. Vim's philosophy is that developers are more productive when they avoid taking their hands off the keyboard. Code should flow naturally from the developer's thoughts through the keyboard and onto the screen. Using a mouse or other peripheral is a detriment to the rate at which a developer's thoughts become code. Vim has a logical, structured command language. When a beginner is learning the editor she may feel like it is impossible to understand all the key commands. However, the commands stack together in a logical way so that over time the editor becomes predictable. The Vimrc file is used to configure the Vim editor. A Vimrc file can range from nothing in it to very complicated with hundreds or thousands of lines of configuration commands. Here's a short, commented example .vimrc file I use for Python development to get a feel for some of the configuration statements: Here is how these configuration options look with a dark background on Mac OS X while editing the markdown for this webpage (how meta!). If a Vimrc file does not already exist, just create it within the user's home directory and it will be picked up by Vim the next time you open the editor. Vim has a reputation for a difficult learning curve, but it's much easier to get started with these tutorials. These installation guides will help you get Vim up and running on Mac OS X, Linux and Windows. Once you get comfortable with Vim as an editor, there are several configuration options and plugins you can use to enhance your Python productivity. These are the resources and tutorials to read when you're ready to take that step. If you use many Vim plugins together it is really handy to have a plugin managers to sort out all of the dependencies. The following plugin managers are the most commonly-used ones in the Vim ecosystem. After you have been using Vim for awhile there will be features you bump into without realizing they were ever there. The following tutorials show how to use some specific niche features. You may already know about these if you have been using Vim for awhile but everyone's learning path is different so it's useful to do a quick scan to make sure you are not missing anything. I want to know about working with data in Python. I want to learn how to code a Python web application using a framework. I've built a Python web app, now how do I deploy it?