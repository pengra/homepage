Develop apps for the Universal Windows Platform (UWP) using C++. Create classic Windows desktop applications, static libs and DLLs using                                                         Win32, MFC, ATL, COM, and/or C++/CLI. Create applications for various Linux distros. Create mobile applications for iOS, Android, and UWP. Create games and graphics applications using DirectX, Unreal, Cocos2D, and more. Use Python Tools for Visual Studio to create Python applications that                                                         interact with C++ programs. Write, refactor, explore and understand your code using the code editor. Compile and link your code, and optimize for maximum throughput. Debug your C++ code with the Visual Studio debugger. Create unit tests for your C++ code. Distribute your finished program to end-users. Identify bottlenecks and optimize code performance by using diagnostic                                                         tools. Upgrade to the latest version of Visual Studio and migrate legacy apps to modern platforms. Microsoft implementation of the C/C++ programming languages and libraries. Component extensions to C++: C++/CLI for .NET programming and C++/CX for UWP programming. Microsoft Foundation Classes (MFC) and Active Template Library (ATL) Concrt, AMP, and OpenMP libraries for parallel programming. C++ REST SDK (code named Casablanca) open-source library for web programming. The Windows Runtime C++ Template Library (WRL) is a template library                                                         that provides a low-level way to author and use Windows Runtime components.