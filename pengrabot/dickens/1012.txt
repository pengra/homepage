See also Text Sequence Type â str String Methods The constants defined in this module are: A string containing all ASCII characters that are considered whitespace. This includes the characters space, tab, linefeed, return, formfeed, and vertical tab. For compound field names, these functions are only called for the first component of the field name; Subsequent components are handled through normal attribute and indexing operations. The grammar for a replacement field is as follows: Some simple format string examples: Some examples: Most built-in types support a common formatting mini-language, which is described in the next section. Most built-in types implement the following options for format specifications, although some of the formatting options are only supported by the numeric types. The meaning of the various alignment options is as follows: Note that unless a minimum field width is defined, the field width will always be the same size as the data to fill it, so that the alignment option has no meaning in this case. The available string presentation types are: The available integer presentation types are: The available presentation types for floating point and decimal values are: The new format syntax also supports new and different options, shown in the following examples. Accessing arguments by position: Accessing arguments by name: Accessing argumentsâ attributes: Accessing argumentsâ items: Aligning the text and specifying a width: Using the comma as a thousands separator: Expressing a percentage: Using type-specific formatting: Nesting arguments and more complex examples: The constructor takes a single argument which is the template string. Here is an example of how to use a Template: Note New in version 3.7. New in version 3.2. Text Processing Services