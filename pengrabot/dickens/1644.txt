String literals take the forms: Besides regular, printable characters, special characters can be encoded using escape notation: Unlike some other languages, JavaScript makes no distinction between single-quoted strings and double-quoted strings; therefore, the escape sequences above work in strings created with either single or double quotes. Sometimes, your code will include strings which are very long. Rather than having lines that go on endlessly, or wrap at the whim of your editor, you may wish to specifically break the string into multiple lines in the source code without affecting the actual string contents. There are two ways you can do this. Or you can use the backslash character ("\") at the end of each line to indicate that the string will continue on the next line. Make sure there is no space or any other character after the backslash (except for a line break), or as an indent; otherwise it will not work. That form looks like this: Both of these result in identical strings being created. The other way (introduced in ECMAScript 5) is to treat the string as an array-like object, where individual characters correspond to a numerical index: These methods are of limited use, as they provide only a subset of the available HTML tags and attributes. Get the latest and greatest from MDN delivered straight to your inbox. If you haven’t previously confirmed a subscription to a Mozilla-related newsletter you may have to do so. Please check your inbox or your spam filter for an email from us. © 2005-2019 Mozilla and individual contributors.