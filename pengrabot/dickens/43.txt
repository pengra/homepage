Sometime ago, I became part of Allegro. The largest e-commerce site in Poland where I have an opportunity to develop things at a great scale. I currently work on an offline batch processing subsystem in Allegro Ads department. We use Apache Spark to process data at scale and Luigi/Apache Airflow to orchestrate batch jobs. Recently I had to analyse some key metrics across our system. Since as a data warehousing solution we are pretty much in the Hadoop ecosystem, I opened up a jupyter notebook and started playing with our Hive tables. Hereâs the core of the problem: We have two tables, partitioned by date daily, with following avro schemas: Now Iâd like to read data from a week ago till now from two tables, then simply join the data on âoffer_idâ key, and maybe create a view for convenient queries so that we have all the metrics aggregated by this key. Hereâs the code I wrote: The idea was that I could easily do something like below, to get metrics about particular offer: Can you spot the bug? Give yourself a try and think how this join is going to work on our dataset. No big deal, I made a mistake and code review caught it. Itâs a normal part of learning process, but: How can I avoid this type of mistake in the future? Your ability to perform is your ability to listen to your intuition, which is a side effect of your experience and talent. Sounds simple, but the key concept I am trying to convey here is that you do not arrive to a solution with a step by step process, it is rather way more random than that, because of the shortcuts your brain provides you. Some people are going to gain intuition (thus re-adjust shortcuts) faster than others, but this is a subconscious thing for sure. If you are a slow learner, try to be persistent. Work hard and try to get most out of your daily job (if it happens to be software engineering) and have a good rest after work. If you learn fast, then lucky you! You might have a talent for this job and some things will click faster compared to others. Try to maximize your potential and find passion for writing software. You will have a lucrative career. Your road to become a better coder.