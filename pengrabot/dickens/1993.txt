It’s a great time for JavaScript. Not only is it becoming a much more respected language, but it's also growing in leaps and bounds - both in popularity and features. As more browsers begin to implement the features of the ECMAScript 5th edition standard, JavaScript becomes an even more powerful platform for you to develop on. In this tutorial, we’ll talk about the new methods that are available to you.  ECMAScript is the official name of what we all call JavaScript. That doesn't mean we're wrong; it's just that the name "JavaScript" is a trademark of Oracle; so Ecma International (originally the European Computer Manufacturers Association—hence ECMA) uses the term "ECMAScript" to refer to the standard of JavaScript. The latest version of this standard is the 5th edition, and it was approved just over a year ago (on December 3, 2009). It encompasses a huge range of great additions, and several of those are starting to show up in browsers. The implementations of ECMAScript 5 is called JavaScript 1.8.5. In this tutorial, we're going to be looking at the JavaScript 1.8.5 functions that are available to us in the Firefox 4 betas. You'll be happy to discover that most of the latest versions of other browsers have these, too . . . except for one. This time, it's Opera, as IE9 has included many of these. This method is a very important one; it really cleans up prototypal inheritance. Previously (in ECMAScript 3rd edition), to create an object and set its prototype, you’d do something like this: If you’ve got an object that you want to define a property on, you’ll probably do it this way: So, how would you use this? Try this: Just use the property name as a property of the descriptor object; then, set the attributes via an object in the value. You’ll want to note—for the rare case when you’re not using an object literal as the second parameter—that only the enumerable properties of the properties object will be used. For more on why we need this function, check out the docs, linked to below. Of course, this might not be the most practical example, but it gives you the idea! However, there are a bunch of ECMAScipt 5 functions that were already supported in Firefox 3, and several other browsers. Have you played with any of these? Note: these are linked to their MDN Documentation. The slew of new functions we’ve looked at here is really only a small part of the goodness added to the ECMAScript standard in the 5th edition. Are there any other features you’re specifically looking forward to using, or maybe even using right now? Let’s here it in the comments! Envato Tuts+ tutorials are translated into other languages by our community members—you can be involved too!