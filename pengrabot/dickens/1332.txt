Assorted information related to the Fedora Linux kernel. This gets you the git checkout and sets up branches for the current releases and master (devel). Once you have switched to the branch you care about (with git checkout branchname), fedpkg prep will create a tree. You'll then be left with a kernel-3.X.? directory, containing both an unpatched 'vanilla-3.X.?' dir, and a linux-3.X.?-noarch hardlinked dir which has the Fedora patches applied. The above command will require you to have SSH access to the Fedora pkg-git archives. If you want to do an anonymous checkout of the sources, you can use: Fedora's kernels are signed during the build via the pesign client on a specific set of machines.  To limit exposure of officially signed builds, only certain people can successfully submit builds that will be tagged into the various koji target tags.  If you are not in this ACL then your build will start, but it will fail in the final tagging step.  Scratch builds are not subject to this, so it is recommended to use that.  If you want the ability to build kernels that go out to end-users when you 'fedpkg build', you need to be in the ACLs that allow builds to be tagged. Please note the caveats on official builds. As mentioned above, updates have to go through bodhi.  Below is the process we use for filing a kernel update in bodhi. With the wide variety of hardware and use cases Fedora users have, we have found that enabling auto-karma can be detrimental.  Often testers will give positive karma for their use cases, hit the auto-karma limit, and the update will be queued for stable before it even hits updates-testing.  That significantly reduces the tester pool and can cause an update that introduces issues for a significant number of people to be pushed to stable.  We delay intentionally to try and catch these cases.  While we will never achieve a perfect update, it has helped quite a bit. For stable Fedora branches, the updates essentially follow the upstream stable release schedule.  Those tend to be released once a week or slightly less frequently.  We do the minor update, build and submit, making sure that the N-1 update is in stable before pushing that release (unless N-1 is very broken.)  E.g. When 3.19.2 is released, we push it to testing and make sure 3.19.1 is at least queued for stable.  That way bodhi doesn't obsolete the 3.19.1 update.  When we have a major rebase for a stable Fedora branch, we follow the same guidelines as above but simply allow more time for people to test. As mentioned in the previous section, Rawhide does not use bodhi for updates. Below are some of the policies we use when it comes to various aspects of the Fedora kernel The Fedora Project is maintained and driven by the community and sponsored by Red Hat.  This is a community maintained site.  Red Hat is not responsible for content.